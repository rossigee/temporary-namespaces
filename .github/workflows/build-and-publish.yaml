name: CI/CD

on:
  push:
    branches:
      - master

jobs:
  build-and-publish:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2
    - name: Set up QEMU
      uses: docker/setup-qemu-action@v3
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    - name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    - name: Build and push
      uses: docker/build-push-action@v5
      with:
        context: .
        platforms: linux/amd64,linux/arm64
        push: true
        tags: rossigee/temporary-namespaces:latest

    - name: Build binary (amd64)
      run: GOARCH=amd64 go build -o temporary-deployments .

    - name: Build binary (arm64)
      run: GOARCH=arm64 go build -o temporary-deployments-arm64 .

    - name: Create release
      id: create_release
      uses: softprops/action-gh-release@v1
      with:
        files: |
          temporary-deployments
          temporary-deployments-arm64
        token: ${{ secrets.GITHUB_TOKEN }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Upload release assets
      id: upload-release-assets
      uses: actions/upload-release-asset@v1
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./temporary-deployments
        asset_name: temporary-deployments
        asset_content_type: application/octet-stream

    - name: Upload release assets (arm64)
      id: upload-release-assets-arm64
      uses: actions/upload-release-asset@v1
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./temporary-deployments-arm64
        asset_name: temporary-deployments-arm64
        asset_content_type: application/octet-stream
